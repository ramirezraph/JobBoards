@using JobBoards.WebApplication.ViewModels.Jobs
@model IndexViewModel;

@{
    ViewData["Title"] = "Jobs";

    var requestPath = ViewContext.HttpContext.Request.Path + ViewContext.HttpContext.Request.QueryString;

    string? GetUrlActionForPage(int pageNumber)
    {
        return Url.Action("Index", "Jobs", new
        {
            pageNumber = pageNumber,
            search = Model.Filters.Search,
            jobCategoryId = Model.Filters.JobCategoryId,
            jobLocationId = Model.Filters.JobLocationId,
            minSalary = Model.Filters.MinSalary,
            maxSalary = Model.Filters.MaxSalary,
            activeJobTypeIds = string.Join(",", Model.Filters.ActiveJobTypeIds)
        });
    }
}

<style>
    .line-clamp-2 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        line-clamp: 2;
        -webkit-box-orient: vertical;
    }
</style>

<div class="container">
    <span class="fw-bold">Job Listings</span>

    <form asp-controller="Jobs" asp-action="RefineSearchResult" method="POST">
        <div class="mt-3">
            <div class="row">
                <div class="col-12">
                    <div class="d-flex">
                        <input type="text" asp-for="Filters.Search" class="form-control">
                        <button class="ms-2 btn btn-outline-primary w-25" type="submit">Search</button>
                    </div>
                    <span class="text-black-50">Search for job title or keyword</span>
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-4">
                <p class="fw-bold">Filters</p>
                <div>
                    <label class="form-label text-black-50">Job Category</label>
                    <select asp-for="Filters.JobCategoryId" class="form-select">
                        <option selected>All</option>
                        @foreach (var jobCategory in Model.JobCategories)
                        {
                            <option value="@jobCategory.Id">@jobCategory.Name</option>
                        }
                    </select>
                </div>
                <div class="mt-2">
                    <label class="form-label text-black-50">Location</label>
                    <select asp-for="Filters.JobLocationId" class="form-select">
                        <option selected>All</option>
                        @foreach (var jobLocation in Model.JobLocations)
                        {
                            <option value="@jobLocation.Id">@jobLocation.City</option>
                        }
                    </select>
                </div>
                <div class="mt-2">
                    <label class="form-label text-black-50">Salary</label>
                    <div class="d-flex align-content-center">
                        <input asp-for="Filters.MinSalary" type="text" class="form-control">
                        <span class="text-black-50 mx-2 align-self-center">-</span>
                        <input asp-for="Filters.MaxSalary" type="text" class="form-control">
                    </div>
                </div>

                <div class="mt-2">
                    <label class="form-label text-black-50">Employment Type</label>
                    @for (int i = 0; i < Model.JobTypes.Count(); i++)
                    {
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" asp-for="@Model.JobTypes[i].IsChecked">
                            <option value="@Model.JobTypes[i].JobTypeName">@Model.JobTypes[i].JobTypeName</option>

                            <input type="hidden" asp-for="@Model.JobTypes[i].JobTypeId" />
                            <input type="hidden" asp-for="@Model.JobTypes[i].JobTypeName" />
                        </div>
                    }
                </div>
                <div class="mt-2">
                    <button type="submit" class="btn btn-outline-primary w-100" style="font-weight: 500;">
                        REFINE SEARCH RESULT
                    </button>
                </div>
            </div>
            <div class="col-md-8 mt-4 mt-md-0">
                <div class="d-flex justify-content-between">
                    <div class="d-flex align-items-center">
                        <span class="fw-bold">Search Result</span>
                        <span class="ms-2 text-black-50" style="font-size: 12px;">
                            Showing Page @Model.Pagination.CurrentPage of @Model.Pagination.TotalPages
                        </span>
                    </div>
                    @if (User.IsInRole("Employer") || User.IsInRole("Admin"))
                    {
                        <a asp-controller="Jobs" asp-action="Create" class="btn btn-primary">
                            Create New Job
                        </a>
                    }
                </div>
                @if (Model.Pagination.Items.Any())
                {
                    @foreach (var jobPost in Model.Pagination.Items)
                    {
                        <div class="mt-3">
                            <div class="card p-3 text-start">
                                <div class="d-flex justify-content-between">
                                    <span class="fs-6 fw-bold">@jobPost.Title</span>
                                    <span class="text-black-50">@jobPost.JobType.Name PHP @jobPost.MinSalary - PHP
                                        @jobPost.MaxSalary</span>
                                </div>
                                <div class="mt-3 text-black line-clamp-2">
                                    @Html.Raw(@jobPost.Description)
                                </div>
                                <div class="d-flex mt-3 justify-content-between">
                                    <span style="font-weight: 500;">@jobPost.JobLocation.City,
                                        @jobPost.JobLocation.Country</span>
                                    <span class="text-black-50">
                                        @jobPost.CreatedAt.ToString("MMMM dd, yyyy h:mm tt")
                                    </span>


                                </div>
                                <div class="mt-3 d-flex">
                                    <a asp-controller="Jobs" asp-action="Details" asp-route-id="@jobPost.Id"
                                asp-route-returnUrl="@requestPath" class="btn btn-primary me-2">
                                        View Details
                                    </a>
                                    @if (!Model.HasWriteAccess)
                                    {
                                        @* <a asp-controller="Jobseekers" asp-action="ApplyNow" asp-route-postId="@jobPost.Id"
                            class="btn btn-primary">
                            Apply Now
                            </a> *@
                                    }
                                    else
                                    {
                                        <a asp-controller="Jobs" asp-action="ManageJobApplications" asp-route-id="@jobPost.Id"
                                            class="btn btn-outline-primary">
                                            Manage Applications
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    <nav aria-label="Job Posts Pagination" class="mt-3">
                        <ul class="pagination">
                            <li class="page-item @(Model.Pagination.HasPreviousPage ? "" : "disabled")">
                                <a class="page-link"
                                    href="@GetUrlActionForPage(Model.Pagination.CurrentPage - 1)">Previous</a>
                            </li>
                            @for (int pageNumber = 1; pageNumber <= Model.Pagination.TotalPages; pageNumber++)
                            {
                                <li class="page-item @(Model.Pagination.CurrentPage == pageNumber ? "active" : "")">
                                    <a class="page-link" href="@GetUrlActionForPage(pageNumber)">@pageNumber</a>
                                </li>
                            }
                            <li class="page-item @(Model.Pagination.HasNextPage ? "" : "disabled")">
                                <a class="page-link" href="@GetUrlActionForPage(Model.Pagination.CurrentPage + 1)">Next</a>
                            </li>
                        </ul>
                    </nav>
                }
                else
                {
                    <p class="text-black-50 mt-2">No Jobs found.</p>
                }

            </div>
        </div>
    </form>
</div>

